{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/search/search-routing.module.ts","webpack:///src/app/search/search.module.ts","webpack:///src/app/search/search.service.ts","webpack:///src/app/search/search/search.component.html","webpack:///src/app/search/search/search.component.ts","webpack:///src/app/shared/components/user-form/user-form.component.ts","webpack:///src/app/shared/components/user-form/user-form.component.html","webpack:///src/app/shared/enums/user.enum.ts","webpack:///src/app/shared/guard/auth.guard.ts","webpack:///src/app/shared/interceptor/auth.interceptor.ts","webpack:///src/app/shared/interceptor/error.interceptor.ts","webpack:///src/app/shared/material-modules.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/flight.service.ts","webpack:///src/app/shared/services/users-account.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","loadChildren","m","SearchModule","canActivate","BookingModule","UsersModule","AppRoutingModule","forRoot","imports","AppComponent","authService","userService","router","title","isLogin","email","getLoggedInUser","userId","loggedInUserSub","getLoggedInUser$","subscribe","loggedInUser","unsubscribe","logout","navigate","navigateByUrl","getUser","toPromise","points","clickLogo","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","fb","form","group","required","password","get","hasError","valid","console","log","value","login","RegisterComponent","user","register","SearchRoutingModule","forChild","SearchService","http","url","API_URL","filter","flight","post","search","providedIn","SearchComponent","searchService","toastr","flightService","blockUITimeout","minDepartureDate","Date","classes","resourceFlights","resourceFlightsReturn","successfulBook","departure","destination","departureDate","returnDate","valueChanges","pipe","getCities","cities","date","minReturnDate","maxDepartureDate","timeout","clearTimeout","error","blockUI","start","setTimeout","reset","getResourceFlight","stop","resourceFlightReturn","Math","floor","price","flightResouce","Array","comeFlight","departureTime","arrivalDate","arrivalTime","returnFlight","all","createFlight","success","submit","UserFormComponent","submitEvent","countries","firstName","lastName","address","MR","country","seatPreference","AISLE","newsletterSub","terms","getCountryList","length","result","flag","setErrors","emit","i","controls","markAsTouched","USER_TITLE","SEAT_PREFERENCE","USER_LEVEL","AuthGuard","next","state","AuthInterceptor","request","token","getToken","handle","clone","setHeaders","Accept","Authorization","event","handleError","ErrorInterceptor","err","handleUnauthorizedError","status","MaterialModules","AuthService","localStorage","getItem","authUser","auth","access_token","setItem","JSON","stringify","registeredUser","statusCode","removeItem","parse","FlightService","UsersAccountService","put","SharedModule","WelcomeComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SearchComponent } from './search/search/search.component';\nimport { AuthGuard } from './shared/guard/auth.guard';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', component: WelcomeComponent, pathMatch: 'full' },\n  {\n    path: 'search',\n    loadChildren: () => import('./search/search.module').then(m => m.SearchModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'bookings',\n    loadChildren: () => import('./booking/booking.module').then(m => m.BookingModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./users/users.module').then(m => m.UsersModule),\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<p>\n  <mat-toolbar>\n    <span (click)=\"clickLogo()\">\n      <img src=\"/assets/image/logo.png\" class=\"logo\">\n    </span>\n    <div class=\"operation-section\">\n      <button mat-button *ngIf=\"!isLogin()\" color=\"primary\" (click)=\"toLogin()\">\n        Login\n      </button>\n      <button mat-button *ngIf=\"!isLogin()\" color=\"primary\" (click)=\"toRegister()\">\n        Register\n      </button>\n      <div *ngIf=\"isLogin()\">\n        <button id=\"search\" mat-button color=\"primary\" (click)=\"toSearch()\">\n          Book Flights\n        </button>\n        <button id=\"my-bookings\" mat-button color=\"primary\" (click)=\"toMyBookings()\">\n          My Bookings\n        </button>\n        <button id=\"my-account\" mat-button color=\"primary\" (click)=\"toMyAccount()\">\n          My Account\n        </button>\n        <button id=\"logout\" mat-button color=\"warn\" (click)=\"logout()\">\n          Logout\n        </button>\n        <button id=\"current-user\" mat-button [matMenuTriggerFor]=\"menu\" (click)=\"getUserPoint()\">{{email}}</button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item *ngIf=\"points !== undefined || points !== null\">Earned Points: <b>{{points}}</b></button>\n          <button mat-menu-item (click)=\"toUserProfile()\">To User Profile</button>\n        </mat-menu>\n      </div>\n    </div>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './shared/services/auth.service';\nimport { UsersAccountService } from './shared/services/users-account.service';\nimport { User } from './users/user.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  title = 'web';\n  email: string;\n  userId: string;\n  loggedInUserSub: Subscription;\n  points: number;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UsersAccountService,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    if (this.authService.isLogin()) {\n      this.email = this.authService.getLoggedInUser().email;\n      this.userId = this.authService.getLoggedInUser().userId;\n    }\n    this.loggedInUserSub = this.authService.getLoggedInUser$.subscribe(async loggedInUser => {\n      this.email = loggedInUser.email;\n      this.userId = loggedInUser.userId;\n    });\n  }\n\n  ngOnDestroy() {\n    this.loggedInUserSub.unsubscribe();\n  }\n\n  isLogin() {\n    return this.authService.isLogin();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  clickLogo() {\n    this.router.navigate(['']);\n  }\n\n  toLogin() {\n    this.router.navigate(['login']);\n  }\n\n  toRegister() {\n    this.router.navigateByUrl('register');\n  }\n\n  toMyBookings() {\n    this.router.navigateByUrl('bookings');\n  }\n\n  toMyAccount() {\n    this.router.navigateByUrl('users');\n  }\n\n  toSearch() {\n    this.router.navigateByUrl('search');\n  }\n\n  toUserProfile() {\n    this.router.navigateByUrl('users/profile')\n  }\n\n  async getUserPoint() {\n    this.points = (await this.userService.getUser(this.userId).toPromise()).points;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { MaterialModules } from './shared/material-modules';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SearchModule } from './search/search.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { AuthInterceptor } from './shared/interceptor/auth.interceptor';\nimport { ErrorInterceptor } from './shared/interceptor/error.interceptor';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WelcomeComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MaterialModules,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SearchModule,\n    SharedModule,\n    ToastrModule.forRoot(),\n    BlockUIModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  getEmailErrorMessage() {\n    if (this.form.get('email').hasError('required')) {\n      return 'Please enter your email';\n    }\n    // return this.form.get('email') ? 'Please enter a valid email address' : '';\n  }\n\n  login(form: FormGroup) {\n    if (form.valid) {\n      console.log('email: ' + form.value.email + ', pwd: ' + form.value.password);\n      this.authService.login({ email: form.value.email, password: form.value.password });\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <form [formGroup]=\"form\" (submit)=\"login(form)\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" id=\"email\" data-testid=\"email\">\n            <mat-error *ngIf=\"email.invalid\">{{getEmailErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" id=\"password\"  data-testid=\"password\">\n            <mat-error *ngIf=\"password.invalid\">Please enter your password</mat-error>\n        </mat-form-field>\n        <br>\n        <button id=\"register-button\" type=\"button\" class=\"align-right\" mat-button [routerLink]=\"['/register']\">Or Register</button>\n        <button id=\"login-button\" class=\"align-right\" mat-raised-button type=\"submit\">Login</button>\n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserDto } from '../users/user.interface';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n \n  constructor(\n    private authService: AuthService\n  ) { }\n\n  async register(user: UserDto) {\n    this.authService.register(user);\n  }\n\n}\n","<div class=\"margin-top-sm\"></div>\n<app-user-form (submitEvent)=\"register($event)\"></app-user-form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: SearchComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search/search.component';\nimport { MaterialModules } from '../shared/material-modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { SearchRoutingModule } from './search-routing.module';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModules,\n    SearchRoutingModule,\n    BlockUIModule\n  ]\n})\nexport class SearchModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { City, Country } from './city.interface';\nimport { Flight, FlightResource } from './flight.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  url = `${environment.API_URL}/api/flights`;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCities(filter: string): Observable<City[]> {\n    return this.http.get<City[]>(`${this.url}/cities?cityname=${filter}`);\n  }\n\n  getResourceFlight(flight: Flight): Observable<FlightResource[]> {\n    return this.http.post<FlightResource[]>(`${this.url}/search`, flight)\n  }\n\n  getCountryList(search: string): Observable<Country[]> {\n    return this.http.get<Country[]>(`/api/getCountryList?search=${search}`);\n  }\n\n}\n","<block-ui>\n    <h3>Where do you want to go today?</h3>\n    <form class=\"search-container\" [formGroup]=\"form\" (submit)=\"submit(form)\">\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"From *\" matInput formControlName=\"departure\" [matAutocomplete]=\"auto\" id=\"departure\" data-testid=\"departure\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                    {{city.name}} - {{city.short}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"To *\" matInput formControlName=\"destination\" [matAutocomplete]=\"auto\" id=\"arrival\" data-testid=\"arrival\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                    {{city.name}} - {{city.short}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"datepicker-align\">\n            <mat-label>Departure date *</mat-label>\n            <input matInput [min]=\"minDepartureDate\" [max]=\"maxDepartureDate\" [matDatepicker]=\"departurePicker\" id=\"departure-datepicker\"\n                formControlName=\"departureDate\"  data-testid=\"departure-date\">\n            <mat-datepicker-toggle matSuffix [for]=\"departurePicker\"></mat-datepicker-toggle>\n            <mat-datepicker #departurePicker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"datepicker-align\">\n            <mat-label>Return date</mat-label>\n            <input matInput [min]=\"minReturnDate\" [matDatepicker]=\"returnPicker\" formControlName=\"returnDate\" id=\"return-datepicker\"  data-testid=\"return-date\">\n            <mat-datepicker-toggle matSuffix [for]=\"returnPicker\"></mat-datepicker-toggle>\n            <mat-datepicker #returnPicker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Travel class *</mat-label>\n            <mat-select formControlName=\"class\" id=\"travel-class\" data-testid=\"travel-class\">\n                <mat-option *ngFor=\"let class of classes\" [value]=\"class\">\n                    {{class}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button mat-mini-fab color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\" id=\"search-button\" data-testid=\"search\">\n            <mat-icon>search</mat-icon>\n        </button>\n    </form>\n    <div class=\"flight-container\">\n        <div *ngFor=\"let resourceFlight of resourceFlights\" class=\"card\">\n            <h2>{{resourceFlight.departure.name}} -> {{resourceFlight.destination.name}}</h2>\n            <h3>{{ resourceFlight.departureTime | date: 'yyyy-MM-dd, h:mm a' }} ->\n                {{ resourceFlight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</h3>\n            <p>Travelling time {{resourceFlight.duration}}</p>\n            <p>{{resourceFlight.class}}</p>\n            <button mat-raised-button color=\"primary\" (click)=\"bookFlight(resourceFlight)\" data-testid=\"book-flight\">$ {{resourceFlight.price}}\n                Book flight</button>\n        </div>\n        <div *ngFor=\"let resourceFlightReturn of resourceFlightsReturn\" class=\"card\">\n            <div class=\"flex-container\">\n                <div *ngFor=\"let flight of resourceFlightReturn\" class=\"width-50\">\n                    <h2><span data-testid=\"flight-departure\">{{flight.departure.name}}</span> -> <span data-testid=\"flight-destination\">{{flight.destination.name}}</span></h2>\n                    <h3><span data-testid=\"flight-departure-time\">{{ flight.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                        <span data-testid=\"flight-arrival-time\">{{ flight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                    <p>Travelling time <span data-testid=\"flight-travel-time\">{{flight.duration}}</span></p>\n                    <p data-testid=\"flight-travel-class\">{{flight.class}}</p>\n                </div>\n            </div>\n            <button mat-raised-button color=\"primary\" (click)=\"bookFlight(resourceFlightReturn)\" data-testid=\"book-flight\">\n                $ {{getReturnFlightPrice(resourceFlightReturn)}} Book flight\n            </button>\n        </div>\n        <div *ngIf=\"successfulBook\">\n            <h1>You're all set!</h1>\n            <div class=\"card\" *ngIf=\"!isSuccessBookArray()\">\n                <h2><span data-testid=\"confirmed-flight-departure\">{{successfulBook?.departure.name}}</span> -> <span data-testid=\"confirmed-flight-destination\">{{successfulBook?.destination.name}}</span></h2>\n                <h3><span data-testid=\"confirmed-flight-departure-time\">{{ successfulBook?.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                    <span data-testid=\"confirmed-flight-arrival-time\">{{ successfulBook?.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                <p>Travelling time <span data-testid=\"confirmed-flight-travel-time\">{{successfulBook?.duration}}</span></p>\n                <p data-testid=\"confirmed-flight-travel-class\">{{successfulBook?.class}}</p>\n\n            </div>\n            <div class=\"card\" *ngIf=\"isSuccessBookArray()\">\n                <div class=\"flex-container\">\n                    <div *ngFor=\"let flight of successfulBook\" class=\"width-50\">\n                        <h2><span data-testid=\"booked-flight-departure\">{{flight.departure.name}}</span> -> <span data-testid=\"booked-flight-destination\">{{flight.destination.name}}</span></h2>\n                        <h3><span data-testid=\"booked-flight-departure-time\">{{ flight.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                            <span data-testid=\"booked-flight-arrival-time\">{{ flight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                        <p>Travelling time <span data-testid=\"booked-flight-travel-time\">{{flight.duration}}</span></p>\n                        <p data-testid=\"booked-flight-travel-class\">{{flight.class}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</block-ui>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime, switchMap, mergeMap } from 'rxjs/operators';\nimport { City } from '../city.interface';\nimport { SearchService } from '../search.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Flight, FlightResource } from '../flight.interface';\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { FlightService } from 'src/app/shared/services/flight.service';\nimport { UsersAccountService } from 'src/app/shared/services/users-account.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n  @BlockUI() blockUI: NgBlockUI;\n  blockUITimeout = 300000;\n  timeout: any;\n\n  form: FormGroup;\n  cities: City[];\n  minDepartureDate = new Date();\n  maxDepartureDate: Date;\n  minReturnDate: Date;\n  classes = ['Economy', 'Premium Economy', 'Business'];\n  resourceFlights: FlightResource[] = [];\n  resourceFlightsReturn = [];\n\n  // after successful creation of flights\n  successfulBook = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private searchService: SearchService,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    private flightService: FlightService,\n    private userService: UsersAccountService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      departure: ['', Validators.required],\n      destination: ['', Validators.required],\n      departureDate: [new Date(), Validators.required],\n      returnDate: [''],\n      class: ['', Validators.required]\n    })\n    this.form.get('departure').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCities(value) : [];\n      })\n    ).subscribe(cities => {\n      this.cities = cities;\n    });\n    this.form.get('destination').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCities(value) : [];\n      })\n    ).subscribe(cities => {\n      this.cities = cities;\n    });\n    this.form.get('departureDate').valueChanges.subscribe(date => {\n      this.minReturnDate = date;\n    });\n    this.form.get('returnDate').valueChanges.subscribe(date => {\n      this.maxDepartureDate = date;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  async submit(form: FormGroup) {\n    this.resourceFlightsReturn = [];\n    this.resourceFlights = [];\n    this.successfulBook = null;\n    const { value, valid } = form;\n    if (valid) {\n      if (value.departure === value.destination) {\n        this.toastr.error('Departure city is the same as the destination city');\n      } else {\n        const flight: Flight = {\n          departure: value.departure,\n          destination: value.destination,\n          departureDate: value.departureDate,\n          returnDate: value.returnDate ? value.returnDate : null,\n          class: value.class\n        }\n        try {\n          this.blockUI.start('Seaching...');\n          this.timeout = setTimeout(() => {\n            this.blockUI.reset();\n          }, this.blockUITimeout);\n          if (value.returnDate) {\n            this.resourceFlights = [];\n            this.resourceFlightsReturn = await this.searchService.getResourceFlight(flight).toPromise();\n          } else {\n            this.resourceFlightsReturn = [];\n            this.resourceFlights = await this.searchService.getResourceFlight(flight).toPromise();\n          }\n          this.blockUI.stop();\n        } catch {\n          this.toastr.error('server error, please try again');\n          this.blockUI.stop();\n        }\n      }\n    }\n  }\n\n  getReturnFlightPrice(resourceFlightReturn: [FlightResource, FlightResource]) {\n    return Math.floor((resourceFlightReturn[0].price + resourceFlightReturn[1].price) * 0.75);\n  }\n\n  bookFlight(flightResouce: FlightResource | [FlightResource, FlightResource]) {\n    if (this.authService.isLogin()) {\n      const email = this.authService.getLoggedInUser().email;\n      if (flightResouce instanceof Array) {\n        const comeFlight = {\n          departure: flightResouce[0].departure,\n          destination: flightResouce[0].destination,\n          departureDate: flightResouce[0].departureTime,\n          arrivalDate: flightResouce[0].arrivalTime,\n          class: flightResouce[0].class,\n          email: email\n        };\n        const returnFlight = {\n          departure: flightResouce[1].departure,\n          destination: flightResouce[1].destination,\n          departureDate: flightResouce[1].departureTime,\n          arrivalDate: flightResouce[1].arrivalTime,\n          class: flightResouce[1].class,\n          email: email\n        };\n        Promise.all([\n          this.flightService.createFlight(comeFlight).toPromise(),\n          this.flightService.createFlight(returnFlight).toPromise()\n        ]).then(() => {\n          this.successfulBook = flightResouce;\n          this.resourceFlights = [];\n          this.resourceFlightsReturn = []\n          this.toastr.success('flights booked');\n        }, () => {\n          this.successfulBook = null;\n          this.toastr.error('server error');\n        });\n      } else {\n        this.flightService.createFlight({\n          departure: flightResouce.departure,\n          destination: flightResouce.destination,\n          departureDate: flightResouce.departureTime,\n          arrivalDate: flightResouce.arrivalTime,\n          class: flightResouce.class,\n          email: email\n        }).toPromise().then(async () => {\n          this.successfulBook = flightResouce;\n          this.resourceFlights = [];\n          this.resourceFlightsReturn = [];\n          this.toastr.success('flights booked');\n        }, () => {\n          this.successfulBook = null;\n          this.toastr.error('server error');\n        });\n      }\n    } else {\n      this.toastr.error('Please login to continue');\n    }\n  }\n\n  isSuccessBookArray() {\n    if (this.successfulBook) {\n      return this.successfulBook instanceof Array;\n    }\n    return false;\n  }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, mergeMap } from 'rxjs/operators';\nimport { Country } from 'src/app/search/city.interface';\nimport { SearchService } from 'src/app/search/search.service';\nimport { User } from 'src/app/users/user.interface';\nimport { SEAT_PREFERENCE, USER_TITLE } from '../../enums/user.enum';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit {\n\n  @Input('user') user: User;\n  @Output() submitEvent = new EventEmitter();\n\n  form: FormGroup;\n  countries: Country[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: [this.user ? this.user.email : '', [Validators.email, Validators.required]],\n      firstName: [this.user ? this.user.firstName : '', Validators.required],\n      lastName: [this.user ? this.user.lastName : '', Validators.required],\n      address: [this.user ? this.user.address : '', Validators.required],\n      title: [this.user ? this.user.title : USER_TITLE.MR, Validators.required],\n      country: [this.user ? this.user.country : '', Validators.required],\n      seatPreference: [this.user ? this.user.seatPreference : SEAT_PREFERENCE.AISLE, Validators.required],\n      newsletterSub: [this.user ? this.user.newsletterSub : true, Validators.required],\n      password: [this.user ? this.user.password : '', Validators.required],\n      terms: [false, Validators.required]\n    });\n    this.form.get('country').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCountryList(value) : [];\n      })\n    ).subscribe(countries => {\n      this.countries = countries;\n      if (this.countries.length === 1) {\n        const result = this.countries[0];\n        if (!result.flag) {\n          this.country.setErrors({ 'invalidCountry': true })\n        }\n      }\n    });\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get lastName() {\n    return this.form.get('lastName');\n  }\n\n  get firstName() {\n    return this.form.get('firstName');\n  }\n\n  get address() {\n    return this.form.get('address');\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get country() {\n    return this.form.get('country');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  get terms() {\n    return this.form.get('terms');\n  }\n\n  getCountryErrorMessage() {\n    if (this.form.get('country').hasError('required')) {\n      return 'Please enter a valid country';\n    }\n    return this.form.get('country').hasError('invalidCountry') ? 'Please enter a valid country' : '';\n  }\n\n  getEmailErrorMessage() {\n    if (this.form.get('email').hasError('required')) {\n      return 'Please enter your email';\n    }\n    return this.form.get('email') ? 'Not a valid email format' : '';\n  }\n\n  submit(form: FormGroup) {\n    if (!form.get('terms').value) {\n      form.get('terms').setErrors({ 'requiredTrue': true });\n    }\n    if (form.valid) {\n      this.submitEvent.emit(form.value);\n    } else {\n      // trigger form validation\n      for (var i in this.form.controls) {\n        this.form.controls[i].markAsTouched();\n      }\n    }\n  }\n\n}\n","<div class=\"user-form-container\">\n    <form [formGroup]=\"form\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" id=\"email\" data-testid=\"email\">\n            <mat-error *ngIf=\"email.invalid\">{{getEmailErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" id=\"password\" data-testid=\"password\">\n            <mat-error *ngIf=\"password.invalid\">Please enter your password</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Title</mat-label>\n            <mat-select formControlName=\"title\" id=\"title\" data-testid=\"title\">\n                <mat-option value=\"Mr\">Mr</mat-option>\n                <mat-option value=\"Ms\">Ms</mat-option>\n                <mat-option value=\"Mrs\">Mrs</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"title.invalid\">Please choose a title</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First name</mat-label>\n            <input matInput formControlName=\"firstName\" id=\"firstName\" data-testid=\"firstName\">\n            <mat-error *ngIf=\"firstName.invalid\">Please enter your first name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last name</mat-label>\n            <input matInput formControlName=\"lastName\" id=\"lastName\" data-testid=\"lastName\">\n            <mat-error *ngIf=\"lastName.invalid\">Please enter your last name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Address</mat-label>\n            <input matInput formControlName=\"address\" id=\"address\" data-testid=\"address\">\n            <mat-error *ngIf=\"address.invalid\">Please enter your address</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"Country\" matInput formControlName=\"country\" [matAutocomplete]=\"auto\"\n                id=\"country\" data-testid=\"country\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let country of countries\" [value]=\"country.name\">\n                    <img [src]=\"country.flag\" class=\"width-30px\">\n                    <span class=\"margin-left-sm\">{{country.name}}</span>\n                </mat-option>\n            </mat-autocomplete>\n            <mat-error *ngIf=\"country.invalid\">{{getCountryErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <div class=\"medium-text\">\n            <label>Seat Preference</label>\n            <input type=\"radio\" id=\"aisle\" formControlName=\"seatPreference\" value=\"aisle\" data-testid=\"seat-aisle\">\n            <label for=\"aisle\">Aisle</label>\n            <input type=\"radio\" id=\"window\" value=\"window\" formControlName=\"seatPreference\" data-testid=\"seat-window\">\n            <label for=\"window\">Window</label>\n        </div>\n        <br>\n        <div class=\"medium-text\">\n            <input type=\"checkbox\" formControlName=\"newsletterSub\" checked id=\"newsletter\"  data-testid=\"newsletter\">\n            <mat-label>Newsletter subscription</mat-label>\n        </div>\n        <br>\n        <div>\n            <input type=\"checkbox\" formControlName=\"terms\" checked id=\"terms\" data-testid=\"terms\">\n            <mat-label class=\"medium-text\">Terms & Conditions</mat-label>\n            <mat-error *ngIf=\"terms.invalid\" class=\"small-text\">Please confirm the terms and conditions to continue</mat-error>\n        </div>\n        <br>\n        <button *ngIf=\"!this.user\" type=\"button\" class=\"align-right\" mat-button [routerLink]=\"['/login']\"\n            id=\"login-button\">Or Login</button>\n        <button class=\"align-right\" (click)=\"submit(form)\" mat-raised-button type=\"button\"\n            id=\"register-button\">{{this.user ? 'Edit' : 'Register'}}</button>\n    </form>\n</div>\n","export enum USER_TITLE {\n    MR = 'Mr',\n    MS = 'Ms',\n    MRS = 'Mrs'\n}\n\nexport enum SEAT_PREFERENCE {\n    AISLE = 'aisle',\n    WINDOW = 'window'\n}\n\nexport enum USER_LEVEL {\n    STANDARD = 'standard',\n    BRONZE = 'bronze',\n    SILVER = 'silver',\n    GOLD = 'gold'\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private toastr: ToastrService\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const isLogin = this.authService.isLogin();\n      if (!isLogin) {\n        this.toastr.error('Token invalid');\n        this.authService.logout();\n      }\n      return isLogin;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // add authorization header with jwt token if available\n    const token = this.authService.getToken();\n    if (!token) {\n      return next.handle(request);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    return next.handle(request).pipe(\n      tap(\n        event => {\n          // do nothing\n        },\n        error => this.handleError()\n      )\n    );\n  }\n\n  handleError() {\n    this.authService.logout();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(\n        private router: Router,\n        private toastr: ToastrService,\n        private authService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => this.handleUnauthorizedError(err)))\n    }\n\n    private handleUnauthorizedError(err: HttpErrorResponse): Observable<any> {\n        if (err.status === 401) {\n            this.toastr.error('Invalid email or password');\n            this.authService.logout();\n        } else if (err.status === 400) {\n            this.toastr.error(err.error.error);\n        } else {\n            return throwError(err);\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModules {}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthUser, loggedInUser } from 'src/app/login/auth-user.interface';\nimport { User } from 'src/app/users/user.interface';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  url = `${environment.API_URL}/api/auth`;\n  getLoggedInUser$ = new Subject<loggedInUser>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  isLogin() {\n    const token = localStorage.getItem('token');\n    return token ? true : false;\n  }\n\n  async login(authUser: AuthUser) {\n    const auth: any = await this.http.post(`${this.url}/login`, authUser).toPromise();\n    if (auth && auth.access_token) {\n      localStorage.setItem('token', auth.access_token);\n      localStorage.setItem('authUser', JSON.stringify({ email: auth.email, userId: auth.userId, points: auth.points }));\n      this.toastr.success(`Logged in as ${auth.email}`)\n      this.getLoggedInUser$.next({ email: auth.email, userId: auth.userId });\n      this.router.navigate(['search']);\n    }\n  }\n\n  setAuthUserInStorage(loggedInUser: loggedInUser) {\n    localStorage.setItem('authUser', JSON.stringify({ email: loggedInUser.email, userId: loggedInUser.userId }))\n  }\n\n  async register(authUser: AuthUser): Promise<User> {\n    try {\n      const registeredUser = await this.http.post<User>(`${this.url}/register`, authUser).toPromise();\n      if (registeredUser.userId) {\n        this.toastr.success(`User: ${registeredUser.email} registered successfully`);\n        this.router.navigateByUrl('login');\n      }\n      return registeredUser;\n    } catch (e) {\n      if (e.error.statusCode === 400) {\n        this.toastr.error(e.error.error);\n      }\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('authUser');\n    this.router.navigate(['login']);\n  }\n\n  getLoggedInUser(): loggedInUser {\n    return JSON.parse(localStorage.getItem('authUser'));\n  }\n\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Flight } from 'src/app/search/flight.interface';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightService {\n\n  url = `${environment.API_URL}/api/flights`;\n\n  constructor(private http: HttpClient) { }\n\n  createFlight(flight: Flight): Observable<Flight[]> {\n    return this.http.post<Flight[]>(this.url, flight);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Flight } from 'src/app/search/flight.interface';\nimport { User, UserDto } from 'src/app/users/user.interface';\nimport { environment } from 'src/environments/environment';\nimport { UsersAccount } from '../../users/users-account.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersAccountService {\n\n  url = `${environment.API_URL}/api/users`;\n\n  constructor(private http: HttpClient) { }\n\n  getUserAccount(email: string): Observable<{ userAccount: UsersAccount[], totalPoints: number }> {\n    return this.http.get<{ userAccount: UsersAccount[], totalPoints: number }>(`${this.url}/flights?email=${email}`);\n  }\n\n  getUser(userId: string) {\n    return this.http.get<User>(`${this.url}/id?userId=${userId}`);\n  }\n\n  updateUser(userId: string, user: UserDto) {\n    return this.http.put<User>(`${this.url}?userId=${userId}`, user);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { MaterialModules } from './material-modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [UserFormComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MaterialModules\n  ],\n  exports: [\n      UserFormComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  isLogin() {\n    return this.authService.isLogin();\n  }\n\n}\n","<div class=\"welcome-container\">\n    <span class=\"welcome-message\">Welcome to Flying High</span>\n    <div *ngIf=\"!isLogin()\">\n        <a [routerLink]=\"['/login']\">Login</a> to view your account and booking <br>\n        OR <a [routerLink]=\"['/register']\">Register</a> to continue\n    </div>\n    <div *ngIf=\"isLogin()\">\n        To <a [routerLink]=\"['/search']\">Search</a> <br>\n        To <a [routerLink]=\"['/bookings']\">My Bookings</a> <br>\n        To <a [routerLink]=\"['/users']\">My Account</a> <br>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}