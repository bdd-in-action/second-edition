{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/search/search-routing.module.ts","./src/app/search/search.module.ts","./src/app/search/search.service.ts","./src/app/search/search/search.component.ts","./src/app/search/search/search.component.html","./src/app/shared/components/user-form/user-form.component.ts","./src/app/shared/components/user-form/user-form.component.html","./src/app/shared/enums/user.enum.ts","./src/app/shared/guard/auth.guard.ts","./src/app/shared/interceptor/auth.interceptor.ts","./src/app/shared/interceptor/error.interceptor.ts","./src/app/shared/material-modules.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/flight.service.ts","./src/app/shared/services/users-account.service.ts","./src/app/shared/shared.module.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SearchComponent } from './search/search/search.component';\nimport { AuthGuard } from './shared/guard/auth.guard';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', component: WelcomeComponent, pathMatch: 'full' },\n  {\n    path: 'search',\n    loadChildren: () => import('./search/search.module').then(m => m.SearchModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'bookings',\n    loadChildren: () => import('./booking/booking.module').then(m => m.BookingModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./users/users.module').then(m => m.UsersModule),\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './shared/services/auth.service';\nimport { UsersAccountService } from './shared/services/users-account.service';\nimport { User } from './users/user.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  title = 'web';\n  email: string;\n  userId: string;\n  loggedInUserSub: Subscription;\n  points: number;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UsersAccountService,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    if (this.authService.isLogin()) {\n      this.email = this.authService.getLoggedInUser().email;\n      this.userId = this.authService.getLoggedInUser().userId;\n    }\n    this.loggedInUserSub = this.authService.getLoggedInUser$.subscribe(async loggedInUser => {\n      this.email = loggedInUser.email;\n      this.userId = loggedInUser.userId;\n    });\n  }\n\n  ngOnDestroy() {\n    this.loggedInUserSub.unsubscribe();\n  }\n\n  isLogin() {\n    return this.authService.isLogin();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  clickLogo() {\n    this.router.navigate(['']);\n  }\n\n  toLogin() {\n    this.router.navigate(['login']);\n  }\n\n  toRegister() {\n    this.router.navigateByUrl('register');\n  }\n\n  toMyBookings() {\n    this.router.navigateByUrl('bookings');\n  }\n\n  toMyAccount() {\n    this.router.navigateByUrl('users');\n  }\n\n  toSearch() {\n    this.router.navigateByUrl('search');\n  }\n\n  toUserProfile() {\n    this.router.navigateByUrl('users/profile')\n  }\n\n  async getUserPoint() {\n    this.points = (await this.userService.getUser(this.userId).toPromise()).points;\n  }\n}\n","<p>\n  <mat-toolbar>\n    <span (click)=\"clickLogo()\">\n      <img src=\"/assets/image/logo.png\" class=\"logo\">\n    </span>\n    <div class=\"operation-section\">\n      <button mat-button *ngIf=\"!isLogin()\" color=\"primary\" (click)=\"toLogin()\">\n        Login\n      </button>\n      <button mat-button *ngIf=\"!isLogin()\" color=\"primary\" (click)=\"toRegister()\">\n        Register\n      </button>\n      <div *ngIf=\"isLogin()\">\n        <button id=\"search\" mat-button color=\"primary\" (click)=\"toSearch()\">\n          Book Flights\n        </button>\n        <button id=\"my-bookings\" mat-button color=\"primary\" (click)=\"toMyBookings()\">\n          My Bookings\n        </button>\n        <button id=\"my-account\" mat-button color=\"primary\" (click)=\"toMyAccount()\">\n          My Account\n        </button>\n        <button id=\"logout\" mat-button color=\"warn\" (click)=\"logout()\">\n          Logout\n        </button>\n        <button id=\"current-user\" mat-button [matMenuTriggerFor]=\"menu\" (click)=\"getUserPoint()\">{{email}}</button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item *ngIf=\"points !== undefined || points !== null\">Earned Points: <b>{{points}}</b></button>\n          <button mat-menu-item (click)=\"toUserProfile()\">To User Profile</button>\n        </mat-menu>\n      </div>\n    </div>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { MaterialModules } from './shared/material-modules';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SearchModule } from './search/search.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { AuthInterceptor } from './shared/interceptor/auth.interceptor';\nimport { ErrorInterceptor } from './shared/interceptor/error.interceptor';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WelcomeComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MaterialModules,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SearchModule,\n    SharedModule,\n    ToastrModule.forRoot(),\n    BlockUIModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  getEmailErrorMessage() {\n    if (this.form.get('email').hasError('required')) {\n      return 'Please enter your email';\n    }\n    // return this.form.get('email') ? 'Please enter a valid email address' : '';\n  }\n\n  login(form: FormGroup) {\n    if (form.valid) {\n      console.log('email: ' + form.value.email + ', pwd: ' + form.value.password);\n      this.authService.login({ email: form.value.email, password: form.value.password });\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <form [formGroup]=\"form\" (submit)=\"login(form)\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" id=\"email\" data-testid=\"email\">\n            <mat-error *ngIf=\"email.invalid\">{{getEmailErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" id=\"password\"  data-testid=\"password\">\n            <mat-error *ngIf=\"password.invalid\">Please enter your password</mat-error>\n        </mat-form-field>\n        <br>\n        <button id=\"register-button\" type=\"button\" class=\"align-right\" mat-button [routerLink]=\"['/register']\">Or Register</button>\n        <button id=\"login-button\" class=\"align-right\" mat-raised-button type=\"submit\">Login</button>\n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserDto } from '../users/user.interface';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n \n  constructor(\n    private authService: AuthService\n  ) { }\n\n  async register(user: UserDto) {\n    this.authService.register(user);\n  }\n\n}\n","<div class=\"margin-top-sm\"></div>\n<app-user-form (submitEvent)=\"register($event)\"></app-user-form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: SearchComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search/search.component';\nimport { MaterialModules } from '../shared/material-modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { SearchRoutingModule } from './search-routing.module';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModules,\n    SearchRoutingModule,\n    BlockUIModule\n  ]\n})\nexport class SearchModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { City, Country } from './city.interface';\nimport { Flight, FlightResource } from './flight.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  url = `${environment.API_URL}/api/flights`;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getCities(filter: string): Observable<City[]> {\n    return this.http.get<City[]>(`${this.url}/cities?cityname=${filter}`);\n  }\n\n  getResourceFlight(flight: Flight): Observable<FlightResource[]> {\n    return this.http.post<FlightResource[]>(`${this.url}/search`, flight)\n  }\n\n  getCountryList(search: string): Observable<Country[]> {\n    return this.http.get<Country[]>(`/api/getCountryList?search=${search}`);\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime, switchMap, mergeMap } from 'rxjs/operators';\nimport { City } from '../city.interface';\nimport { SearchService } from '../search.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Flight, FlightResource } from '../flight.interface';\nimport { BlockUI, NgBlockUI } from 'ng-block-ui';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { FlightService } from 'src/app/shared/services/flight.service';\nimport { UsersAccountService } from 'src/app/shared/services/users-account.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n  @BlockUI() blockUI: NgBlockUI;\n  blockUITimeout = 300000;\n  timeout: any;\n\n  form: FormGroup;\n  cities: City[];\n  minDepartureDate = new Date();\n  maxDepartureDate: Date;\n  minReturnDate: Date;\n  classes = ['Economy', 'Premium Economy', 'Business'];\n  resourceFlights: FlightResource[] = [];\n  resourceFlightsReturn = [];\n\n  // after successful creation of flights\n  successfulBook = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private searchService: SearchService,\n    private toastr: ToastrService,\n    private authService: AuthService,\n    private flightService: FlightService,\n    private userService: UsersAccountService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      departure: ['', Validators.required],\n      destination: ['', Validators.required],\n      departureDate: [new Date(), Validators.required],\n      returnDate: [''],\n      class: ['', Validators.required]\n    })\n    this.form.get('departure').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCities(value) : [];\n      })\n    ).subscribe(cities => {\n      this.cities = cities;\n    });\n    this.form.get('destination').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCities(value) : [];\n      })\n    ).subscribe(cities => {\n      this.cities = cities;\n    });\n    this.form.get('departureDate').valueChanges.subscribe(date => {\n      this.minReturnDate = date;\n    });\n    this.form.get('returnDate').valueChanges.subscribe(date => {\n      this.maxDepartureDate = date;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  async submit(form: FormGroup) {\n    this.resourceFlightsReturn = [];\n    this.resourceFlights = [];\n    this.successfulBook = null;\n    const { value, valid } = form;\n    if (valid) {\n      if (value.departure === value.destination) {\n        this.toastr.error('Departure city is the same as the destination city');\n      } else {\n        const flight: Flight = {\n          departure: value.departure,\n          destination: value.destination,\n          departureDate: value.departureDate,\n          returnDate: value.returnDate ? value.returnDate : null,\n          class: value.class\n        }\n        try {\n          this.blockUI.start('Seaching...');\n          this.timeout = setTimeout(() => {\n            this.blockUI.reset();\n          }, this.blockUITimeout);\n          if (value.returnDate) {\n            this.resourceFlights = [];\n            this.resourceFlightsReturn = await this.searchService.getResourceFlight(flight).toPromise();\n          } else {\n            this.resourceFlightsReturn = [];\n            this.resourceFlights = await this.searchService.getResourceFlight(flight).toPromise();\n          }\n          this.blockUI.stop();\n        } catch {\n          this.toastr.error('server error, please try again');\n          this.blockUI.stop();\n        }\n      }\n    }\n  }\n\n  getReturnFlightPrice(resourceFlightReturn: [FlightResource, FlightResource]) {\n    return Math.floor((resourceFlightReturn[0].price + resourceFlightReturn[1].price) * 0.75);\n  }\n\n  bookFlight(flightResouce: FlightResource | [FlightResource, FlightResource]) {\n    if (this.authService.isLogin()) {\n      const email = this.authService.getLoggedInUser().email;\n      if (flightResouce instanceof Array) {\n        const comeFlight = {\n          departure: flightResouce[0].departure,\n          destination: flightResouce[0].destination,\n          departureDate: flightResouce[0].departureTime,\n          arrivalDate: flightResouce[0].arrivalTime,\n          class: flightResouce[0].class,\n          email: email\n        };\n        const returnFlight = {\n          departure: flightResouce[1].departure,\n          destination: flightResouce[1].destination,\n          departureDate: flightResouce[1].departureTime,\n          arrivalDate: flightResouce[1].arrivalTime,\n          class: flightResouce[1].class,\n          email: email\n        };\n        Promise.all([\n          this.flightService.createFlight(comeFlight).toPromise(),\n          this.flightService.createFlight(returnFlight).toPromise()\n        ]).then(() => {\n          this.successfulBook = flightResouce;\n          this.resourceFlights = [];\n          this.resourceFlightsReturn = []\n          this.toastr.success('flights booked');\n        }, () => {\n          this.successfulBook = null;\n          this.toastr.error('server error');\n        });\n      } else {\n        this.flightService.createFlight({\n          departure: flightResouce.departure,\n          destination: flightResouce.destination,\n          departureDate: flightResouce.departureTime,\n          arrivalDate: flightResouce.arrivalTime,\n          class: flightResouce.class,\n          email: email\n        }).toPromise().then(async () => {\n          this.successfulBook = flightResouce;\n          this.resourceFlights = [];\n          this.resourceFlightsReturn = [];\n          this.toastr.success('flights booked');\n        }, () => {\n          this.successfulBook = null;\n          this.toastr.error('server error');\n        });\n      }\n    } else {\n      this.toastr.error('Please login to continue');\n    }\n  }\n\n  isSuccessBookArray() {\n    if (this.successfulBook) {\n      return this.successfulBook instanceof Array;\n    }\n    return false;\n  }\n}","<block-ui>\n    <h2 class=\"section-title\">Where do you want to go today?</h2>\n    <form class=\"search-container\" [formGroup]=\"form\" (submit)=\"submit(form)\">\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"From *\" matInput formControlName=\"departure\" [matAutocomplete]=\"auto\" id=\"departure\" data-testid=\"departure\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                    {{city.name}} - {{city.short}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"To *\" matInput formControlName=\"destination\" [matAutocomplete]=\"auto\" id=\"arrival\" data-testid=\"arrival\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let city of cities\" [value]=\"city.name\">\n                    {{city.name}} - {{city.short}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"datepicker-align\">\n            <mat-label>Departure date *</mat-label>\n            <input matInput [min]=\"minDepartureDate\" [max]=\"maxDepartureDate\" [matDatepicker]=\"departurePicker\" id=\"departure-datepicker\"\n                formControlName=\"departureDate\"  data-testid=\"departure-date\">\n            <mat-datepicker-toggle matSuffix [for]=\"departurePicker\"></mat-datepicker-toggle>\n            <mat-datepicker #departurePicker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"datepicker-align\">\n            <mat-label>Return date</mat-label>\n            <input matInput [min]=\"minReturnDate\" [matDatepicker]=\"returnPicker\" formControlName=\"returnDate\" id=\"return-datepicker\"  data-testid=\"return-date\">\n            <mat-datepicker-toggle matSuffix [for]=\"returnPicker\"></mat-datepicker-toggle>\n            <mat-datepicker #returnPicker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Travel class *</mat-label>\n            <mat-select formControlName=\"class\" id=\"travel-class\" data-testid=\"travel-class\">\n                <mat-option *ngFor=\"let class of classes\" [value]=\"class\">\n                    {{class}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button mat-mini-fab color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\" id=\"search-button\" data-testid=\"search\">\n            <mat-icon>search</mat-icon>\n        </button>\n    </form>\n    <div class=\"flight-container\">\n        <div *ngFor=\"let resourceFlight of resourceFlights\" class=\"card\">\n            <h2>{{resourceFlight.departure.name}} -> {{resourceFlight.destination.name}}</h2>\n            <h3>{{ resourceFlight.departureTime | date: 'yyyy-MM-dd, h:mm a' }} ->\n                {{ resourceFlight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</h3>\n            <p>Travelling time {{resourceFlight.duration}}</p>\n            <p>{{resourceFlight.class}}</p>\n            <button mat-raised-button color=\"primary\" (click)=\"bookFlight(resourceFlight)\" data-testid=\"book-flight\">$ {{resourceFlight.price}}\n                Book flight</button>\n        </div>\n        <div *ngFor=\"let resourceFlightReturn of resourceFlightsReturn\" class=\"card\">\n            <div class=\"flex-container\">\n                <div *ngFor=\"let flight of resourceFlightReturn\" class=\"width-50\">\n                    <h2><span data-testid=\"flight-departure\">{{flight.departure.name}}</span> -> <span data-testid=\"flight-destination\">{{flight.destination.name}}</span></h2>\n                    <h3><span data-testid=\"flight-departure-time\">{{ flight.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                        <span data-testid=\"flight-arrival-time\">{{ flight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                    <p>Travelling time <span data-testid=\"flight-travel-time\">{{flight.duration}}</span></p>\n                    <p data-testid=\"flight-travel-class\">{{flight.class}}</p>\n                </div>\n            </div>\n            <button mat-raised-button color=\"primary\" (click)=\"bookFlight(resourceFlightReturn)\" data-testid=\"book-flight\">\n                $ {{getReturnFlightPrice(resourceFlightReturn)}} Book flight\n            </button>\n        </div>\n        <div *ngIf=\"successfulBook\">\n            <h1>You're all set!</h1>\n            <div class=\"card\" *ngIf=\"!isSuccessBookArray()\">\n                <h2><span data-testid=\"confirmed-flight-departure\">{{successfulBook?.departure.name}}</span> -> <span data-testid=\"confirmed-flight-destination\">{{successfulBook?.destination.name}}</span></h2>\n                <h3><span data-testid=\"confirmed-flight-departure-time\">{{ successfulBook?.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                    <span data-testid=\"confirmed-flight-arrival-time\">{{ successfulBook?.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                <p>Travelling time <span data-testid=\"confirmed-flight-travel-time\">{{successfulBook?.duration}}</span></p>\n                <p data-testid=\"confirmed-flight-travel-class\">{{successfulBook?.class}}</p>\n\n            </div>\n            <div class=\"card\" *ngIf=\"isSuccessBookArray()\">\n                <div class=\"flex-container\">\n                    <div *ngFor=\"let flight of successfulBook\" class=\"width-50\">\n                        <h2><span data-testid=\"booked-flight-departure\">{{flight.departure.name}}</span> -> <span data-testid=\"booked-flight-destination\">{{flight.destination.name}}</span></h2>\n                        <h3><span data-testid=\"booked-flight-departure-time\">{{ flight.departureTime | date: 'yyyy-MM-dd, h:mm a' }}</span> ->\n                            <span data-testid=\"booked-flight-arrival-time\">{{ flight.arrivalTime | date: 'yyyy-MM-dd, h:mm a' }}</span></h3>\n                        <p>Travelling time <span data-testid=\"booked-flight-travel-time\">{{flight.duration}}</span></p>\n                        <p data-testid=\"booked-flight-travel-class\">{{flight.class}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</block-ui>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, mergeMap } from 'rxjs/operators';\nimport { Country } from 'src/app/search/city.interface';\nimport { SearchService } from 'src/app/search/search.service';\nimport { User } from 'src/app/users/user.interface';\nimport { SEAT_PREFERENCE, USER_TITLE } from '../../enums/user.enum';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent implements OnInit {\n\n  @Input('user') user: User;\n  @Output() submitEvent = new EventEmitter();\n\n  form: FormGroup;\n  countries: Country[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private searchService: SearchService\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: [this.user ? this.user.email : '', [Validators.email, Validators.required]],\n      firstName: [this.user ? this.user.firstName : '', Validators.required],\n      lastName: [this.user ? this.user.lastName : '', Validators.required],\n      address: [this.user ? this.user.address : '', Validators.required],\n      title: [this.user ? this.user.title : USER_TITLE.MR, Validators.required],\n      country: [this.user ? this.user.country : '', Validators.required],\n      seatPreference: [this.user ? this.user.seatPreference : SEAT_PREFERENCE.AISLE, Validators.required],\n      newsletterSub: [this.user ? this.user.newsletterSub : true, Validators.required],\n      password: [this.user ? this.user.password : '', Validators.required],\n      terms: [false, Validators.required]\n    });\n    this.form.get('country').valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      mergeMap((value) => {\n        return value ? this.searchService.getCountryList(value) : [];\n      })\n    ).subscribe(countries => {\n      this.countries = countries;\n      if (this.countries.length === 1) {\n        const result = this.countries[0];\n        if (!result.flag) {\n          this.country.setErrors({ 'invalidCountry': true })\n        }\n      }\n    });\n  }\n\n  get email() {\n    return this.form.get('email');\n  }\n\n  get lastName() {\n    return this.form.get('lastName');\n  }\n\n  get firstName() {\n    return this.form.get('firstName');\n  }\n\n  get address() {\n    return this.form.get('address');\n  }\n\n  get title() {\n    return this.form.get('title');\n  }\n\n  get country() {\n    return this.form.get('country');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  get terms() {\n    return this.form.get('terms');\n  }\n\n  getCountryErrorMessage() {\n    if (this.form.get('country').hasError('required')) {\n      return 'Please enter a valid country';\n    }\n    return this.form.get('country').hasError('invalidCountry') ? 'Please enter a valid country' : '';\n  }\n\n  getEmailErrorMessage() {\n    if (this.form.get('email').hasError('required')) {\n      return 'Please enter your email';\n    }\n    return this.form.get('email') ? 'Not a valid email format' : '';\n  }\n\n  submit(form: FormGroup) {\n    if (!form.get('terms').value) {\n      form.get('terms').setErrors({ 'requiredTrue': true });\n    }\n    if (form.valid) {\n      this.submitEvent.emit(form.value);\n    } else {\n      // trigger form validation\n      for (var i in this.form.controls) {\n        this.form.controls[i].markAsTouched();\n      }\n    }\n  }\n\n}\n","<div class=\"user-form-container\">\n    <form [formGroup]=\"form\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" id=\"email\" data-testid=\"email\">\n            <mat-error *ngIf=\"email.invalid\">{{getEmailErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\" id=\"password\" data-testid=\"password\">\n            <mat-error *ngIf=\"password.invalid\">Please enter your password</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Title</mat-label>\n            <mat-select formControlName=\"title\" id=\"title\" data-testid=\"title\">\n                <mat-option value=\"Mr\">Mr</mat-option>\n                <mat-option value=\"Ms\">Ms</mat-option>\n                <mat-option value=\"Mrs\">Mrs</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"title.invalid\">Please choose a title</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>First name</mat-label>\n            <input matInput formControlName=\"firstName\" id=\"firstName\" data-testid=\"firstName\">\n            <mat-error *ngIf=\"firstName.invalid\">Please enter your first name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Last name</mat-label>\n            <input matInput formControlName=\"lastName\" id=\"lastName\" data-testid=\"lastName\">\n            <mat-error *ngIf=\"lastName.invalid\">Please enter your last name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Address</mat-label>\n            <input matInput formControlName=\"address\" id=\"address\" data-testid=\"address\">\n            <mat-error *ngIf=\"address.invalid\">Please enter your address</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"input-align\">\n            <input type=\"text\" placeholder=\"Country\" matInput formControlName=\"country\" [matAutocomplete]=\"auto\"\n                id=\"country\" data-testid=\"country\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let country of countries\" [value]=\"country.name\">\n                    <img [src]=\"country.flag\" class=\"width-30px\">\n                    <span class=\"margin-left-sm\">{{country.name}}</span>\n                </mat-option>\n            </mat-autocomplete>\n            <mat-error *ngIf=\"country.invalid\">{{getCountryErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <br>\n        <div class=\"medium-text\">\n            <label>Seat Preference</label>\n            <input type=\"radio\" id=\"aisle\" formControlName=\"seatPreference\" value=\"aisle\" data-testid=\"seat-aisle\">\n            <label for=\"aisle\">Aisle</label>\n            <input type=\"radio\" id=\"window\" value=\"window\" formControlName=\"seatPreference\" data-testid=\"seat-window\">\n            <label for=\"window\">Window</label>\n        </div>\n        <br>\n        <div class=\"medium-text\">\n            <input type=\"checkbox\" formControlName=\"newsletterSub\" checked id=\"newsletter\"  data-testid=\"newsletter\">\n            <mat-label>Newsletter subscription</mat-label>\n        </div>\n        <br>\n        <div>\n            <input type=\"checkbox\" formControlName=\"terms\" checked id=\"terms\" data-testid=\"terms\">\n            <mat-label class=\"medium-text\">Terms & Conditions</mat-label>\n            <mat-error *ngIf=\"terms.invalid\" class=\"small-text\">Please confirm the terms and conditions to continue</mat-error>\n        </div>\n        <br>\n        <button *ngIf=\"!this.user\" type=\"button\" class=\"align-right\" mat-button [routerLink]=\"['/login']\"\n            id=\"login-button\">Or Login</button>\n        <button class=\"align-right\" (click)=\"submit(form)\" mat-raised-button type=\"button\"\n            id=\"register-button\">{{this.user ? 'Edit' : 'Register'}}</button>\n    </form>\n</div>\n","export enum USER_TITLE {\n    MR = 'Mr',\n    MS = 'Ms',\n    MRS = 'Mrs'\n}\n\nexport enum SEAT_PREFERENCE {\n    AISLE = 'aisle',\n    WINDOW = 'window'\n}\n\nexport enum USER_LEVEL {\n    STANDARD = 'standard',\n    BRONZE = 'bronze',\n    SILVER = 'silver',\n    GOLD = 'gold'\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private toastr: ToastrService\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const isLogin = this.authService.isLogin();\n      if (!isLogin) {\n        this.toastr.error('Token invalid');\n        this.authService.logout();\n      }\n      return isLogin;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // add authorization header with jwt token if available\n    const token = this.authService.getToken();\n    if (!token) {\n      return next.handle(request);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    return next.handle(request).pipe(\n      tap(\n        event => {\n          // do nothing\n        },\n        error => this.handleError()\n      )\n    );\n  }\n\n  handleError() {\n    this.authService.logout();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(\n        private router: Router,\n        private toastr: ToastrService,\n        private authService: AuthService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => this.handleUnauthorizedError(err)))\n    }\n\n    private handleUnauthorizedError(err: HttpErrorResponse): Observable<any> {\n        if (err.status === 401) {\n            this.toastr.error('Invalid email or password');\n            this.authService.logout();\n        } else if (err.status === 400) {\n            this.toastr.error(err.error.error);\n        } else {\n            return throwError(err);\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModules {}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthUser, loggedInUser } from 'src/app/login/auth-user.interface';\nimport { User } from 'src/app/users/user.interface';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  url = `${environment.API_URL}/api/auth`;\n  getLoggedInUser$ = new Subject<loggedInUser>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  isLogin() {\n    const token = localStorage.getItem('token');\n    return token ? true : false;\n  }\n\n  async login(authUser: AuthUser) {\n    const auth: any = await this.http.post(`${this.url}/login`, authUser).toPromise();\n    if (auth && auth.access_token) {\n      localStorage.setItem('token', auth.access_token);\n      localStorage.setItem('authUser', JSON.stringify({ email: auth.email, userId: auth.userId, points: auth.points }));\n      this.toastr.success(`Logged in as ${auth.email}`)\n      this.getLoggedInUser$.next({ email: auth.email, userId: auth.userId });\n      this.router.navigate(['search']);\n    }\n  }\n\n  setAuthUserInStorage(loggedInUser: loggedInUser) {\n    localStorage.setItem('authUser', JSON.stringify({ email: loggedInUser.email, userId: loggedInUser.userId }))\n  }\n\n  async register(authUser: AuthUser): Promise<User> {\n    try {\n      const registeredUser = await this.http.post<User>(`${this.url}/register`, authUser).toPromise();\n      if (registeredUser.userId) {\n        this.toastr.success(`User: ${registeredUser.email} registered successfully`);\n        this.router.navigateByUrl('login');\n      }\n      return registeredUser;\n    } catch (e) {\n      if (e.error.statusCode === 400) {\n        this.toastr.error(e.error.error);\n      }\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('authUser');\n    this.router.navigate(['login']);\n  }\n\n  getLoggedInUser(): loggedInUser {\n    return JSON.parse(localStorage.getItem('authUser'));\n  }\n\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Flight } from 'src/app/search/flight.interface';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightService {\n\n  url = `${environment.API_URL}/api/flights`;\n\n  constructor(private http: HttpClient) { }\n\n  createFlight(flight: Flight): Observable<Flight[]> {\n    return this.http.post<Flight[]>(this.url, flight);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Flight } from 'src/app/search/flight.interface';\nimport { User, UserDto } from 'src/app/users/user.interface';\nimport { environment } from 'src/environments/environment';\nimport { UsersAccount } from '../../users/users-account.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersAccountService {\n\n  url = `${environment.API_URL}/api/users`;\n\n  constructor(private http: HttpClient) { }\n\n  getUserAccount(email: string): Observable<{ userAccount: UsersAccount[], totalPoints: number }> {\n    return this.http.get<{ userAccount: UsersAccount[], totalPoints: number }>(`${this.url}/flights?email=${email}`);\n  }\n\n  getUser(userId: string) {\n    return this.http.get<User>(`${this.url}/id?userId=${userId}`);\n  }\n\n  updateUser(userId: string, user: UserDto) {\n    return this.http.put<User>(`${this.url}?userId=${userId}`, user);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { MaterialModules } from './material-modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [UserFormComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MaterialModules\n  ],\n  exports: [\n      UserFormComponent\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  isLogin() {\n    return this.authService.isLogin();\n  }\n\n}\n","<div class=\"welcome-container\">\n    <span class=\"welcome-message\">Welcome to Flying High</span>\n    <div *ngIf=\"!isLogin()\">\n        <a [routerLink]=\"['/login']\">Login</a> to view your account and booking <br>\n        OR <a [routerLink]=\"['/register']\">Register</a> to continue\n    </div>\n    <div *ngIf=\"isLogin()\">\n        To <a [routerLink]=\"['/search']\">Search</a> <br>\n        To <a [routerLink]=\"['/bookings']\">My Bookings</a> <br>\n        To <a [routerLink]=\"['/users']\">My Account</a> <br>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}