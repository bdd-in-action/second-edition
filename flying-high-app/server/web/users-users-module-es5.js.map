{"version":3,"sources":["webpack:///src/app/users/edit-user-dialog/edit-user-dialog.component.ts","webpack:///src/app/users/edit-user-dialog/edit-user-dialog.component.html","webpack:///src/app/users/profile/profile.component.html","webpack:///src/app/users/profile/profile.component.ts","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.module.ts"],"names":["EditUserDialogComponent","user","userService","authService","dialogRef","userId","getLoggedInUser","updateUser","toPromise","updatedUser","close","editUser","selector","templateUrl","styleUrls","ProfileComponent","userAccountService","dialog","authUserId","getUser","open","data","afterClosed","res","getLoggedInUser$","next","email","setAuthUserInStorage","routes","path","component","UsersRoutingModule","forChild","imports","exports","UsersComponent","router","usersAccount","displayedColumns","userLevel","getUserAccount","userAccount","totalPoints","navigateByUrl","openUserModal","toUserProfile","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { UsersAccountService } from 'src/app/shared/services/users-account.service';\nimport { User, UserDto } from '../user.interface';\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.scss']\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private userService: UsersAccountService,\n    private authService: AuthService,\n    private dialogRef: MatDialogRef<EditUserDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  async editUser(user: UserDto) {\n    const userId = this.authService.getLoggedInUser().userId;\n    const updatedUser = await this.userService.updateUser(userId, user).toPromise();\n    if (updatedUser) {\n      this.dialogRef.close(updatedUser);\n    }\n  }\n\n}\n","<h2 mat-dialog-title>Edit user {{user.email}}</h2>\n<app-user-form [user]=\"user\" (submitEvent)=\"editUser($event)\"></app-user-form>","<div class=\"profile-container\" *ngIf=\"user\">\n    <div class=\"card\">\n            <div class=\"name\">{{user.email}}</div>\n            <div class=\"fullname\">{{user.title}}: {{user.firstName}} {{user.lastName}}</div>\n            <div>{{user.address}}, {{user.country}}</div>\n            <br>\n            <div class=\"level\">\n                <div>User Level: <b>{{user.userLevel | uppercase}}</b></div>\n                <div>Earned Points: <b>{{user.points}}</b></div>\n            </div>\n            <div>Seat Preference: <b>{{user.seatPreference | uppercase}}</b></div>\n            <div>You have <b>{{ user.newsletterSub ? 'Booked' : 'Not Booked' }}</b> the Newsletter subscription</div>\n            <div class=\"button-container\">\n                <button mat-raised-button (click)=\"openEditUserDialog()\">Edit User Profile</button>\n            </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { UsersAccountService } from 'src/app/shared/services/users-account.service';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\nimport { User } from '../user.interface';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: User;\n\n  constructor(\n    private userAccountService: UsersAccountService,\n    private authService: AuthService,\n    private dialog: MatDialog\n  ) { }\n\n  async ngOnInit() {\n    const authUserId = this.authService.getLoggedInUser().userId;\n    this.user = await this.userAccountService.getUser(authUserId).toPromise();\n  }\n\n  async openEditUserDialog() {\n    const res = await this.dialog.open(EditUserDialogComponent, {\n      data: this.user\n    }).afterClosed().toPromise();\n    if (res) {\n      this.user = res;\n      this.authService.getLoggedInUser$.next({ email: this.user.email, userId: this.user.userId });\n      this.authService.setAuthUserInStorage({ email: this.user.email, userId: this.user.userId });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UsersComponent } from './users.component';\n\n\nconst routes: Routes = [\n  { path: '', component: UsersComponent },\n  { path: 'profile', component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","<div class=\"user-info-container\">\n    Point Balance: <span test-dataid=\"point-balance\">{{totalPoints}}</span> &nbsp;&nbsp; \n    Status Level: <span test-dataid=\"status-level\">{{userLevel | uppercase}}</span>\n    <button mat-raised-button (click)=\"openUserModal()\">Edit User Profile</button>\n    <button mat-button color=\"primary\" (click)=\"toUserProfile()\">To User Profile</button>\n</div>\n<table mat-table [dataSource]=\"usersAccount\" *ngIf=\"totalPoints !== 0\">\n    <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef> Date </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.flightInfo.date | date: 'yyyy-MM-dd, h:mm a'}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"departure\">\n        <th mat-header-cell *matHeaderCellDef> Departure </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.flightInfo.departure}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"destination\">\n        <th mat-header-cell *matHeaderCellDef> Destination </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.flightInfo.destination}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"pointsEarned\">\n        <th mat-header-cell *matHeaderCellDef> Points Earned </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.flightInfo.point}} </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { USER_LEVEL } from '../shared/enums/user.enum';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UsersAccountService } from '../shared/services/users-account.service';\nimport { EditUserDialogComponent } from './edit-user-dialog/edit-user-dialog.component';\nimport { User } from './user.interface';\nimport { UsersAccount } from './users-account.interface';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  usersAccount: UsersAccount[] = [];\n  userLevel: USER_LEVEL;\n  totalPoints: number;\n  displayedColumns: string[] = ['date', 'departure', 'destination', 'pointsEarned'];\n  user: User;\n\n  constructor(\n    private userAccountService: UsersAccountService,\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    const email = this.authService.getLoggedInUser().email;\n    const authUserId = this.authService.getLoggedInUser().userId;\n    this.user = await this.userAccountService.getUser(authUserId).toPromise();\n    this.userLevel = this.user.userLevel;\n    const res = await this.userAccountService.getUserAccount(email).toPromise();\n    this.usersAccount = res.userAccount;\n    this.totalPoints = res.totalPoints;\n  }\n\n  async openUserModal() {\n    const res = await this.dialog.open(EditUserDialogComponent, {\n      data: this.user\n    }).afterClosed().toPromise();\n    if (res) {\n      this.user = res;\n      this.authService.getLoggedInUser$.next({ email: this.user.email, userId: this.user.userId });\n      this.authService.setAuthUserInStorage({ email: this.user.email, userId: this.user.userId});\n    }\n  }\n\n  toUserProfile() {\n    this.router.navigateByUrl('users/profile')\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users.component';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { MaterialModules } from '../shared/material-modules';\nimport { EditUserDialogComponent } from './edit-user-dialog/edit-user-dialog.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [UsersComponent, EditUserDialogComponent, ProfileComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    MaterialModules,\n    SharedModule\n  ]\n})\nexport class UsersModule { }\n"]}