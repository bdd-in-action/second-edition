webdriver {
  driver = chrome
  autodownload = true
  chrome.silentOutput = true
}
headless.mode = true

report.tagtypes = "capability,feature,browser"

serenity {
  take.screenshots = FOR_FAILURES
  compress.filenames = false
  console {
    colors = true
    timestamp = true
  }
  logging = verbose
  report {
    accessibility = true
    durations = "1,2,4,8,15,30,60"
    tagtypes = "capability,feature"
    hide.empty.requirements = false
    exclude.tags = "resetappstate,singlebrowser,manual"
  }
}

jira.url="https://thucydides.atlassian.net"

#
# Chrome options can be defined using the chrome.switches property
#
chrome {
  switches = "--start-maximized;--enable-automation;--no-sandbox;--disable-popup-blocking;--disable-default-apps;--disable-infobars;--disable-gpu;--disable-extensions;"
}
//firefox {
//  arguments = "-headless"
//}

#
# Two environments are configured here: one when the application is running locally, and one when we run the tests
# against the Heroku server.
# You can switch environments using the environment variable, e.g.
#   mvn verify -Denvironment=heroku
#
environment = heroku
#environment = sauce
#environment = local

environments {
  with_firefox {
    webdriver.driver = firefox
  }

  with_chrome {
    webdriver.driver = chrome
  }

}

environments {
  local {
    webdriver.base.url = "http://localhost:3000"
    api.base.url = "http://localhost:3000/api"
    headless.mode = true
  }

  heroku {
    webdriver.base.url = "https://bdd-flyer.herokuapp.com"
    api.base.url = "https://bdd-flyer.herokuapp.com/api"
  }
  selenoid {
    webdriver {
      driver = "remote"
      remote.driver = "firefox"
      remote.url = "http://localhost:4444/wd/hub"
      base.url = "https://bdd-flyer.herokuapp.com"
    }
    api.base.url = "https://bdd-flyer.herokuapp.com/api"
  }
  browserstack {
    webdriver.driver = remote
    webdriver.base.url = "https://bdd-flyer.herokuapp.com"
    api.base.url = "https://bdd-flyer.herokuapp.com/api"
    serenity.take.screenshots = FOR_FAILURES
    webdriver.remote.driver = chrome
    webdriver.remote.url = "https://#{browserstack.user}:#{browserstack.key}@#{browserstack.server}"
    headless.mode = false
  }
  #
  # This environment illustrates a Saucelabs configuration
  #
  sauce {
    webdriver {
      # Driver must be remote for Saucelabs
      driver = remote
      base.url = "https://bdd-flyer.herokuapp.com"

      # W3C Capabilities
      screenResolution = "1280x1024"
      strictFileInteractability = true
      unhandledPromptBehavior = "ignore"

      timeouts {
        script = 20000
        pageLoad = 400000,
        implicit = 1000
      }
    }

    #
    # Saucelabs-specific capabilities
    #
    saucelabs {
      #
      # Mandatory fields
      #
      platformName = "Windows 10"
      browserName = "Chrome"
      browserVersion = "latest"
      #
      # The saucelabs.url property tells Serenity to use Saucelabs for these tests
      #
      url = "https://#{saucelabs.user_id}:#{saucelabs.access_key}@ondemand.us-west-1.saucelabs.com:443/wd/hub"

      #
      # Optional saucelabs-specific fields
      #
      tags = ["end-to-end"]
      //      recordScreenshots = false
      maxDuration = 900
    }

    api.base.url = "https://bdd-flyer.herokuapp.com/api"
    headless.mode = false
  }
}
report.tagtypes = environment

#
# Shortcuts for the URLs of specific pages we want to open.
# When we use the '#' symbol for variable substitution, it also works for environment-specific variables.
#
pages {
  home = "#{webdriver.base.url}"
  registration = "#{webdriver.base.url}/register"
  my.accounts = "#{webdriver.base.url}/users"
  my.bookings = "#{webdriver.base.url}/bookings"
  book.flights = "#{webdriver.base.url}/search"
}
